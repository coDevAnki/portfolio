@use "./mixins" as *;

.about {
  &-container {
    @include flex(column);
    padding-top: 100px;
    @media screen and (min-width: 900px) {
      flex-direction: row;
    }

    .about-content {
      p {
        margin: 0.4em 0;
        font-size: var(--fz-paragraph);
      }
      .para_header {
        color: var(--light-grey);
        font-weight: 700;
        margin: 1.5rem 0 0.5rem 0;
      }
      .skill-set {
        margin: 0.5em 0;
        // flex as fallback for grid
        display: flex;
        @supports (display: grid) {
          display: grid;
        }
        grid-template-columns: repeat(2, 1fr);
        column-gap: 1rem;
        row-gap: 0.5rem;

        li::before {
          content: "â–¹";
          color: var(--green);
        }
      }
    }
    .profile-image {
      margin-top: 3rem;
      width: 100%;
      min-width: 280px;
      // max-width: 500px;
      height: 400px;
      @media screen and (min-width: 900px) {
        min-width: 350px;
      }
      @media screen and (min-width: 1000px) {
        margin-left: 1rem;
      }
      .profile-image_wrapper {
        width: 60%;
        margin-left: auto;
        margin-right: auto;
        @media screen and (min-width: 900px) {
          width: 75%;
          margin-left: auto;
          margin-right: 0;
        }
        position: relative;
        &::after {
          content: "";
          position: absolute;
          width: 100%;
          height: 100%;
          top: 20px;
          left: 20px;
          border: 3px solid var(--green);
          border-radius: 5px;
          z-index: -1;
          transition: transform var(--transition);
        }
        background-color: var(--light-green);
        transition: background-color var(--transition);
        &:hover {
          background-color: var(--white);
          &::after {
            transform: translate(-5px, -5px);
          }
        }
      }
      picture,
      img {
        display: block;
        object-fit: cover;
        width: 100%;
        height: 100%;
        filter: brightness(1.1);
        mix-blend-mode: multiply;
      }
    }
  }
}
